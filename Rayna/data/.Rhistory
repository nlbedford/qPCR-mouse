setwd("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015/data_xls")
## The process:
## 1. Loop over all experimental prjoect files and create one big "rawdata" dataframe
## 2. Clean the data to make numbers numbers and rename important columns
## 3. Wrangle standard curve data with dplyr and plyr package into a dataframe called dilutions
## 4. Calculate primer efficiences with MCMC.qpcr PrimEFF function
## 5. Wrangle sample info a with dplyr packag
## 6. Analyze data with MCMC.qpcr package
#install.packages("xlsx", dependencies = TRUE) #note, must have Java installed on computer
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("MCMC.qpcr")
#install.packages("reshape2")
library(xlsx)
library(dplyr)
library(plyr)
library(MCMC.qpcr)
library(reshape2)
## 1. Loop over all experimental prjoect files and create one big "rawdata" dataframe
## uses read.xlsx function to read 1 sheet, sharting at row 8, nothing imported as a factor
file_list <- list.files() #creates a string will all the files in a diretory for us to loop through
rm(rawdata) # first removed any dataframe called rawdata
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("rawdata")){
rawdata <- read.xlsx(file, sheetIndex = 1, startRow=8, stringsAsFactors=FALSE)
}
# if the merged dataset does exist, append to it
if (exists("rawdata")){
temp_dataset <-read.xlsx(file, sheetIndex = 1, startRow=8, stringsAsFactors=FALSE)
rawdata<-rbind(rawdata, temp_dataset)
rm(temp_dataset)
}
}
names(rawdata)
str(rawdata)
## 2. Clean data
cleandata <- rawdata
cleandata <- rename(cleandata, c("Sample.Name"="sample", "Target.Name"="gene",  "CÃ‘."="cq", "Quantity"="dna"))
names(cleandata)
str(cleandata)
cleandata$dna <- as.numeric(cleandata$dna, na.rm = TRUE)
cleandata$cq <- as.numeric(cleandata$cq, na.rm = TRUE)
cleandata$gene <- as.factor(cleandata$gene)
str(cleandata)
dilutions <- cleandata %>%
filter(Task == "STANDARD") %>%
select(dna, cq, gene)
str(dilutions)
PrimEff(dilutions) # makes a plot with the primer efficiencies
eff <- PrimEff(dilutions) #creates a table with the primer efficiencies
counts <- cleandata %>%
filter(Task == "UNKNOWN") %>%
select(Well, sample, gene,  cq) %>%
dcast(Well + sample ~ gene )
View(counts)
write.csv(counts, "counts.csv")
View(counts)
samples <- read.csv("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015/sample_info", header=TRUE, sep="," )
samples <- read.csv("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015/sample_info_2015", header=TRUE, sep="," )
samples <- read.csv("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015/", "sample_info_2015", header=TRUE, sep="," )
setwd("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015/data_xls")
samples <- read.csv("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015", "sample_info_2015", header=TRUE, sep="," )
samples <- read.csv("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015", "sample_info_2015.csv", header=TRUE, sep="," )
samples <- read.csv("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015/sample_info_2015.csv", header=TRUE, sep="," )
samples <- read.csv("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015/sample_info/sample_info_2015.csv", header=TRUE, sep="," )
View(samples)
samples <- read.csv("Z:/NSB_2016/IntegrativeNeuroscience/STGsingleneuron2015/sample_info/sample_info_2015.csv", header=TRUE, sep="," )
data <- inner_join(counts, samples)
View(data)
data <- inner_join(counts, samples) %>%
arrange(sample)
View(data)
View(data)
data <- inner_join(counts, samples) %>%
arrange(sample) %>%
select(sample, condition, CbNaV, IH, inx1, inx2)
View(data)
amp.eff <- PrimEff(dilutions) #creates a table with the primer efficiencies
dd=cq2counts(
data=data,
genecols=c(3:6), # where the Cq data are in the data table
condcols=c(1:2), # which columns contain factors
effic=amp.eff,
Cq1=37
)
View(dd)
head(dd)
mm=mcmc.qpcr(
fixed="condition",
random="sample",
data=dd
)
summary(mm)
mmd=mcmc.qpcr(
fixed="condition",
random="sample",
data=dd,
pr=T,
pl=T
)
summary(mmd)
diagnostic.mcmc(
model=mmd,
col="grey50",
cex=0.8
)
HPDplot(
model=mm,
factors="conditionheat",
main="stress"
)
HPDplot(
model=mm,
factors=c(
"timepointtwo",
"conditionheat:timepointtwo"
),
main="recovery"
)
HPDplot(
model=mm,
factors="conditionstg",
main="STG vs Muscle"
)
s1=HPDsummary(model=mm,data=dd)
s0=HPDsummary(model=mm,data=dd,relative=TRUE)
setwd("Z:/NSB_2016/IntegrativeNeuroscience/qPCR-mouse/Rayna/data")
file_list <- list.files() #creates a string will all the files in a diretory for us to loop through
rm(rawdata) # first removed any dataframe called rawdata
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("rawdata")){
rawdata <- read.xlsx("2016-06-29_183933-mouse-RnRNA-tenfold-rmh.xls", sheetIndex = 1, startRow=42, stringsAsFactors=FALSE)
}
# if the merged dataset does exist, append to it
if (exists("rawdata")){
rawdata <- read.xlsx("2016-06-29_183933-mouse-RnRNA-tenfold-rmh.xls", sheetIndex = 1, startRow=42, stringsAsFactors=FALSE)
rawdata<-rbind(rawdata, temp_dataset)
rm(temp_dataset)
}
}
file_list <- list.files() #creates a string will all the files in a diretory for us to loop through
rm(rawdata) # first removed any dataframe called rawdata
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("rawdata")){
rawdata <- read.xlsx("2016-06-29_183933-mouse-RnRNA-tenfold-rmh.xls", sheetIndex = 1, startRow=42, stringsAsFactors=FALSE)
}
# if the merged dataset does exist, append to it
if (exists("rawdata")){
rawdata <- read.xlsx("2016-06-29_183933-mouse-RnRNA-tenfold-rmh.xls", sheetIndex = 1, startRow=42, stringsAsFactors=FALSE)
rawdata<-rbind(rawdata, temp_dataset)
rm(temp_dataset)
}
}
View(rawdata)
